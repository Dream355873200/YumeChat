// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Message.proto
// Protobuf C++ Version: 5.29.3

#include "Message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace message {

inline constexpr MessageMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conversation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        type_{static_cast< ::message::MessageType >(0)},
        sequence_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageMeta::MessageMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageMetaDefaultTypeInternal() {}
  union {
    MessageMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageMetaDefaultTypeInternal _MessageMeta_default_instance_;

inline constexpr MsgNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        meta_{nullptr},
        content_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MsgNode::MsgNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsgNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgNodeDefaultTypeInternal() {}
  union {
    MsgNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgNodeDefaultTypeInternal _MsgNode_default_instance_;
}  // namespace message
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Message_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Message_2eproto = nullptr;
const ::uint32_t
    TableStruct_Message_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::message::MsgNode, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::MsgNode, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::message::MsgNode, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::MsgNode, _impl_.meta_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::message::MsgNode, _impl_.content_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.conversation_id_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.sender_id_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::message::MessageMeta, _impl_.client_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::message::MsgNode)},
        {25, -1, -1, sizeof(::message::MessageMeta)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::message::_MsgNode_default_instance_._instance,
    &::message::_MessageMeta_default_instance_._instance,
};
const char descriptor_table_protodef_Message_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rMessage.proto\022\007message\"\256\001\n\007MsgNode\022\"\n\004"
    "meta\030\001 \001(\0132\024.message.MessageMeta\022\016\n\004text"
    "\030\002 \001(\tH\000\022\017\n\005image\030\003 \001(\014H\000\022\017\n\005audio\030\004 \001(\014"
    "H\000\022\017\n\005video\030\005 \001(\014H\000\022\016\n\004file\030\006 \001(\014H\000\022\016\n\004r"
    "ich\030\007 \001(\tH\000\022\021\n\007command\030\010 \001(\rH\000B\t\n\007conten"
    "t\"\251\001\n\013MessageMeta\022\022\n\nmessage_id\030\001 \001(\t\022\027\n"
    "\017conversation_id\030\002 \001(\t\022\021\n\tsender_id\030\003 \001("
    "\t\022\021\n\ttimestamp\030\004 \001(\003\022\"\n\004type\030\005 \001(\0162\024.mes"
    "sage.MessageType\022\020\n\010sequence\030\006 \001(\005\022\021\n\tcl"
    "ient_id\030\007 \001(\t*f\n\013MessageType\022\013\n\007UNKNOWN\020"
    "\000\022\010\n\004TEXT\020\001\022\t\n\005IMAGE\020\002\022\t\n\005AUDIO\020\003\022\t\n\005VID"
    "EO\020\004\022\010\n\004FILE\020\005\022\010\n\004RICH\020\006\022\013\n\007COMMAND\020\007b\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_Message_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Message_2eproto = {
    false,
    false,
    485,
    descriptor_table_protodef_Message_2eproto,
    "Message.proto",
    &descriptor_table_Message_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_Message_2eproto::offsets,
    file_level_enum_descriptors_Message_2eproto,
    file_level_service_descriptors_Message_2eproto,
};
namespace message {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    524288u, 0u, };
bool MessageType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
// ===================================================================

class MsgNode::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MsgNode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MsgNode, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::message::MsgNode, _impl_._oneof_case_);
};

MsgNode::MsgNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MsgNode)
}
inline PROTOBUF_NDEBUG_INLINE MsgNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::MsgNode& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        content_{},
        _oneof_case_{from._oneof_case_[0]} {}

MsgNode::MsgNode(
    ::google::protobuf::Arena* arena,
    const MsgNode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MsgNode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::message::MessageMeta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  switch (content_case()) {
    case CONTENT_NOT_SET:
      break;
      case kText:
        new (&_impl_.content_.text_) decltype(_impl_.content_.text_){arena, from._impl_.content_.text_};
        break;
      case kImage:
        new (&_impl_.content_.image_) decltype(_impl_.content_.image_){arena, from._impl_.content_.image_};
        break;
      case kAudio:
        new (&_impl_.content_.audio_) decltype(_impl_.content_.audio_){arena, from._impl_.content_.audio_};
        break;
      case kVideo:
        new (&_impl_.content_.video_) decltype(_impl_.content_.video_){arena, from._impl_.content_.video_};
        break;
      case kFile:
        new (&_impl_.content_.file_) decltype(_impl_.content_.file_){arena, from._impl_.content_.file_};
        break;
      case kRich:
        new (&_impl_.content_.rich_) decltype(_impl_.content_.rich_){arena, from._impl_.content_.rich_};
        break;
      case kCommand:
        _impl_.content_.command_ = from._impl_.content_.command_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:message.MsgNode)
}
inline PROTOBUF_NDEBUG_INLINE MsgNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        content_{},
        _oneof_case_{} {}

inline void MsgNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.meta_ = {};
}
MsgNode::~MsgNode() {
  // @@protoc_insertion_point(destructor:message.MsgNode)
  SharedDtor(*this);
}
inline void MsgNode::SharedDtor(MessageLite& self) {
  MsgNode& this_ = static_cast<MsgNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.meta_;
  if (this_.has_content()) {
    this_.clear_content();
  }
  this_._impl_.~Impl_();
}

void MsgNode::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:message.MsgNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (content_case()) {
    case kText: {
      _impl_.content_.text_.Destroy();
      break;
    }
    case kImage: {
      _impl_.content_.image_.Destroy();
      break;
    }
    case kAudio: {
      _impl_.content_.audio_.Destroy();
      break;
    }
    case kVideo: {
      _impl_.content_.video_.Destroy();
      break;
    }
    case kFile: {
      _impl_.content_.file_.Destroy();
      break;
    }
    case kRich: {
      _impl_.content_.rich_.Destroy();
      break;
    }
    case kCommand: {
      // No need to clear
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONTENT_NOT_SET;
}


inline void* MsgNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MsgNode(arena);
}
constexpr auto MsgNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MsgNode),
                                            alignof(MsgNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MsgNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MsgNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MsgNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MsgNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MsgNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MsgNode>(), &MsgNode::ByteSizeLong,
            &MsgNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MsgNode, _impl_._cached_size_),
        false,
    },
    &MsgNode::kDescriptorMethods,
    &descriptor_table_Message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MsgNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 8, 1, 40, 2> MsgNode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsgNode, _impl_._has_bits_),
    0, // no _extensions_
    8, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::MsgNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .message.MessageMeta meta = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.meta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.MessageMeta meta = 1;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.text_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes image = 3;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.image_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes audio = 4;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.audio_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes video = 5;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.video_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes file = 6;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.file_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string rich = 7;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.rich_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 command = 8;
    {PROTOBUF_FIELD_OFFSET(MsgNode, _impl_.content_.command_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::MessageMeta>()},
  }}, {{
    "\17\0\4\0\0\0\0\4\0\0\0\0\0\0\0\0"
    "message.MsgNode"
    "text"
    "rich"
  }},
};

PROTOBUF_NOINLINE void MsgNode::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MsgNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  clear_content();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MsgNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MsgNode& this_ = static_cast<const MsgNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MsgNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MsgNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:message.MsgNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .message.MessageMeta meta = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          switch (this_.content_case()) {
            case kText: {
              const std::string& _s = this_._internal_text();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MsgNode.text");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            case kImage: {
              const std::string& _s = this_._internal_image();
              target = stream->WriteBytesMaybeAliased(3, _s, target);
              break;
            }
            case kAudio: {
              const std::string& _s = this_._internal_audio();
              target = stream->WriteBytesMaybeAliased(4, _s, target);
              break;
            }
            case kVideo: {
              const std::string& _s = this_._internal_video();
              target = stream->WriteBytesMaybeAliased(5, _s, target);
              break;
            }
            case kFile: {
              const std::string& _s = this_._internal_file();
              target = stream->WriteBytesMaybeAliased(6, _s, target);
              break;
            }
            case kRich: {
              const std::string& _s = this_._internal_rich();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MsgNode.rich");
              target = stream->WriteStringMaybeAliased(7, _s, target);
              break;
            }
            case kCommand: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                  8, this_._internal_command(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:message.MsgNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MsgNode::ByteSizeLong(const MessageLite& base) {
          const MsgNode& this_ = static_cast<const MsgNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MsgNode::ByteSizeLong() const {
          const MsgNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:message.MsgNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .message.MessageMeta meta = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
          switch (this_.content_case()) {
            // string text = 2;
            case kText: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
              break;
            }
            // bytes image = 3;
            case kImage: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_image());
              break;
            }
            // bytes audio = 4;
            case kAudio: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_audio());
              break;
            }
            // bytes video = 5;
            case kVideo: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_video());
              break;
            }
            // bytes file = 6;
            case kFile: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_file());
              break;
            }
            // string rich = 7;
            case kRich: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rich());
              break;
            }
            // uint32 command = 8;
            case kCommand: {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_command());
              break;
            }
            case CONTENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MsgNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsgNode*>(&to_msg);
  auto& from = static_cast<const MsgNode&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:message.MsgNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::message::MessageMeta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_content();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kText: {
        if (oneof_needs_init) {
          _this->_impl_.content_.text_.InitDefault();
        }
        _this->_impl_.content_.text_.Set(from._internal_text(), arena);
        break;
      }
      case kImage: {
        if (oneof_needs_init) {
          _this->_impl_.content_.image_.InitDefault();
        }
        _this->_impl_.content_.image_.Set(from._internal_image(), arena);
        break;
      }
      case kAudio: {
        if (oneof_needs_init) {
          _this->_impl_.content_.audio_.InitDefault();
        }
        _this->_impl_.content_.audio_.Set(from._internal_audio(), arena);
        break;
      }
      case kVideo: {
        if (oneof_needs_init) {
          _this->_impl_.content_.video_.InitDefault();
        }
        _this->_impl_.content_.video_.Set(from._internal_video(), arena);
        break;
      }
      case kFile: {
        if (oneof_needs_init) {
          _this->_impl_.content_.file_.InitDefault();
        }
        _this->_impl_.content_.file_.Set(from._internal_file(), arena);
        break;
      }
      case kRich: {
        if (oneof_needs_init) {
          _this->_impl_.content_.rich_.InitDefault();
        }
        _this->_impl_.content_.rich_.Set(from._internal_rich(), arena);
        break;
      }
      case kCommand: {
        _this->_impl_.content_.command_ = from._impl_.content_.command_;
        break;
      }
      case CONTENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgNode::CopyFrom(const MsgNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MsgNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsgNode::InternalSwap(MsgNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.meta_, other->_impl_.meta_);
  swap(_impl_.content_, other->_impl_.content_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MsgNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageMeta::_Internal {
 public:
};

MessageMeta::MessageMeta(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MessageMeta)
}
inline PROTOBUF_NDEBUG_INLINE MessageMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::MessageMeta& from_msg)
      : message_id_(arena, from.message_id_),
        conversation_id_(arena, from.conversation_id_),
        sender_id_(arena, from.sender_id_),
        client_id_(arena, from.client_id_),
        _cached_size_{0} {}

MessageMeta::MessageMeta(
    ::google::protobuf::Arena* arena,
    const MessageMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, sequence_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::sequence_));

  // @@protoc_insertion_point(copy_constructor:message.MessageMeta)
}
inline PROTOBUF_NDEBUG_INLINE MessageMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_id_(arena),
        conversation_id_(arena),
        sender_id_(arena),
        client_id_(arena),
        _cached_size_{0} {}

inline void MessageMeta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, sequence_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::sequence_));
}
MessageMeta::~MessageMeta() {
  // @@protoc_insertion_point(destructor:message.MessageMeta)
  SharedDtor(*this);
}
inline void MessageMeta::SharedDtor(MessageLite& self) {
  MessageMeta& this_ = static_cast<MessageMeta&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.conversation_id_.Destroy();
  this_._impl_.sender_id_.Destroy();
  this_._impl_.client_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MessageMeta::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageMeta(arena);
}
constexpr auto MessageMeta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageMeta),
                                            alignof(MessageMeta));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageMeta::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageMeta_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageMeta::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageMeta::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageMeta>(), &MessageMeta::ByteSizeLong,
            &MessageMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_._cached_size_),
        false,
    },
    &MessageMeta::kDescriptorMethods,
    &descriptor_table_Message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 71, 2> MessageMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::MessageMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.message_id_)}},
    // string conversation_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.conversation_id_)}},
    // string sender_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.sender_id_)}},
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageMeta, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.timestamp_)}},
    // .message.MessageType type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageMeta, _impl_.type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.type_)}},
    // int32 sequence = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageMeta, _impl_.sequence_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.sequence_)}},
    // string client_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string conversation_id = 2;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.conversation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender_id = 3;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.sender_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .message.MessageType type = 5;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 sequence = 6;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string client_id = 7;
    {PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.client_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\12\17\11\0\0\0\11"
    "message.MessageMeta"
    "message_id"
    "conversation_id"
    "sender_id"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void MessageMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MessageMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.conversation_id_.ClearToEmpty();
  _impl_.sender_id_.ClearToEmpty();
  _impl_.client_id_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sequence_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.sequence_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageMeta::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageMeta& this_ = static_cast<const MessageMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageMeta::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:message.MessageMeta)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_id = 1;
          if (!this_._internal_message_id().empty()) {
            const std::string& _s = this_._internal_message_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MessageMeta.message_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string conversation_id = 2;
          if (!this_._internal_conversation_id().empty()) {
            const std::string& _s = this_._internal_conversation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MessageMeta.conversation_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender_id = 3;
          if (!this_._internal_sender_id().empty()) {
            const std::string& _s = this_._internal_sender_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MessageMeta.sender_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          // .message.MessageType type = 5;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_type(), target);
          }

          // int32 sequence = 6;
          if (this_._internal_sequence() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_sequence(), target);
          }

          // string client_id = 7;
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.MessageMeta.client_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:message.MessageMeta)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageMeta::ByteSizeLong(const MessageLite& base) {
          const MessageMeta& this_ = static_cast<const MessageMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageMeta::ByteSizeLong() const {
          const MessageMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:message.MessageMeta)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message_id = 1;
            if (!this_._internal_message_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_id());
            }
            // string conversation_id = 2;
            if (!this_._internal_conversation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_conversation_id());
            }
            // string sender_id = 3;
            if (!this_._internal_sender_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender_id());
            }
            // string client_id = 7;
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // .message.MessageType type = 5;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // int32 sequence = 6;
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageMeta*>(&to_msg);
  auto& from = static_cast<const MessageMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.MessageMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_conversation_id().empty()) {
    _this->_internal_set_conversation_id(from._internal_conversation_id());
  }
  if (!from._internal_sender_id().empty()) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageMeta::CopyFrom(const MessageMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MessageMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageMeta::InternalSwap(MessageMeta* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversation_id_, &other->_impl_.conversation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_id_, &other->_impl_.sender_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.sequence_)
      + sizeof(MessageMeta::_impl_.sequence_)
      - PROTOBUF_FIELD_OFFSET(MessageMeta, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata MessageMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Message_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
